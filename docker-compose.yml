
services:
    web:
        build:
            context: .
            dockerfile: ./octane/Dockerfile
        ports:
            - '${APP_PORT:-8000}:8000'
            - '${REDIS_PORT:-6379}:6379'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
            - '${VITE_REVERB_PORT:-8080}:${VITE_REVERB_PORT:-8080}'
        depends_on:
            - mysql
            - redis
            - minio
            - meilisearch
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        networks:
            - netisu
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:${APP_PORT:-8000}/up"] # Implement a health check endpoint for Octane
            interval: 5s
            timeout: 3s
            retries: 3
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - '${REDIS_VOLUME_LOCAL:-./database/redis-data}:/data'
        networks:
            - netisu
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
    meilisearch:
        image: 'getmeili/meilisearch:latest'
        container_name: meilisearch
        restart: unless-stopped
        ports:
            - '7720:7700'
        environment:
            MEILI_NO_ANALYTICS: '${MEILISEARCH_NO_ANALYTICS}'
            MEILI_NO_SENTRY: '${MEILISEARCH_NO_SENTRY}'
            MEILI_MASTER_KEY: '${MEILISEARCH_KEY}'
        volumes:
            - './meilisearch-data:/meilisearch-data'
        networks:
            - netisu

networks:
    netisu:
        driver: bridge
